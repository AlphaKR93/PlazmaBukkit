From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: AlphaKR93 <dev@alpha93.kr>
Date: Sun, 14 Jan 2024 19:51:19 +0900
Subject: [PATCH] Use Gradle Version Catalogs


diff --git a/build.gradle.kts b/build.gradle.kts
index 81996f00384674b29368e8bea944bdd14d631da3..176f07b1ce1d037880ea7b56d354281d3f89b11a 100644
--- a/build.gradle.kts
+++ b/build.gradle.kts
@@ -18,57 +18,29 @@ dependencies {
         exclude("io.papermc.paper", "paper-api")
     }
     // Purpur end
-    // Paper start
-    implementation("org.jline:jline-terminal-jansi:3.21.0")
-    implementation("net.minecrell:terminalconsoleappender:1.3.0")
-    implementation("net.kyori:adventure-text-serializer-ansi:4.16.0") // Keep in sync with adventureVersion from Paper-API build file
-    /*
-          Required to add the missing Log4j2Plugins.dat file from log4j-core
-          which has been removed by Mojang. Without it, log4j has to classload
-          all its classes to check if they are plugins.
-          Scanning takes about 1-2 seconds so adding this speeds up the server start.
-     */
-    implementation("org.apache.logging.log4j:log4j-core:2.19.0") // Paper - implementation
-    log4jPlugins.annotationProcessorConfigurationName("org.apache.logging.log4j:log4j-core:2.19.0") // Paper - Needed to generate meta for our Log4j plugins
+
+    // Plazma start - Use Gradle Version Catalogs
+    implementation(project(":plazma-api"))
+    implementation(project(":plazma-mojangapi"))
+    implementation(server.bundles.implementation)
+    implementation(common.asm.commons)
+    implementation(common.log4j.iostreams)
+    implementation(common.commons.lang2)
+    implementation(server.velocity) { isTransitive = false }
+
+    runtimeOnly(common.maven.provider)
+    runtimeOnly(common.bundles.maven)
+    runtimeOnly(server.bundles.runtime)
+
+    implementation(common.log4j.core) // Paper - implementation
+    log4jPlugins.annotationProcessorConfigurationName(common.log4j.core) // Paper - Needed to generate meta for our Log4j plugins
     runtimeOnly(log4jPlugins.output)
     alsoShade(log4jPlugins.output)
-    implementation("io.netty:netty-codec-haproxy:4.1.97.Final") // Paper - Add support for proxy protocol
-    // Paper end
-    implementation("org.apache.logging.log4j:log4j-iostreams:2.22.1") // Paper - remove exclusion
-    implementation("org.ow2.asm:asm-commons:9.7")
-    implementation("org.spongepowered:configurate-yaml:4.2.0-SNAPSHOT") // Paper - config files
-    implementation("commons-lang:commons-lang:2.6")
-    runtimeOnly("org.xerial:sqlite-jdbc:3.45.3.0")
-    runtimeOnly("com.mysql:mysql-connector-j:8.3.0")
-    runtimeOnly("com.lmax:disruptor:3.4.4") // Paper
-    // Paper start - Use Velocity cipher
-    implementation("com.velocitypowered:velocity-native:3.1.2-SNAPSHOT") {
-        isTransitive = false
-    }
-    // Paper end - Use Velocity cipher
-
-    runtimeOnly("org.apache.maven:maven-resolver-provider:3.9.6")
-    runtimeOnly("org.apache.maven.resolver:maven-resolver-connector-basic:1.9.18")
-    runtimeOnly("org.apache.maven.resolver:maven-resolver-transport-http:1.9.18")
-
-    implementation("org.mozilla:rhino-runtime:1.7.14") // Purpur
-    implementation("org.mozilla:rhino-engine:1.7.14") // Purpur
-    implementation("dev.omega24:upnp4j:1.0") // Purpur
-
-    testImplementation("io.github.classgraph:classgraph:4.8.47") // Paper - mob goal test
-    testImplementation("org.junit.jupiter:junit-jupiter:5.10.2")
-    testImplementation("org.hamcrest:hamcrest:2.2")
-    testImplementation("org.mockito:mockito-core:5.11.0")
-    testImplementation("org.ow2.asm:asm-tree:9.7")
-    testImplementation("org.junit-pioneer:junit-pioneer:2.2.0") // Paper - CartesianTest
-    implementation("net.neoforged:srgutils:1.0.9") // Paper - mappings handling
-    implementation("net.neoforged:AutoRenamingTool:2.0.3") // Paper - remap plugins
-    // Paper start - Remap reflection
-    val reflectionRewriterVersion = "0.0.1"
-    implementation("io.papermc:reflection-rewriter:$reflectionRewriterVersion")
-    implementation("io.papermc:reflection-rewriter-runtime:$reflectionRewriterVersion")
-    implementation("io.papermc:reflection-rewriter-proxy-generator:$reflectionRewriterVersion")
-    // Paper end - Remap reflection
+
+    testImplementation(server.bundles.test)
+    testImplementation(common.bundles.test)
+    // Plazma end - Use Gradle Version Catalogs
+
 }
 
 paperweight {
