From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: AlphaKR93 <dev@alpha93.kr>
Date: Tue, 5 Dec 2023 13:29:28 +0900
Subject: [PATCH] Add entity spawn deadlock timer

[REFERENCE]
- AbsolemJackdaw/FixMySpawnR

diff --git a/src/main/java/net/minecraft/world/level/BaseSpawner.java b/src/main/java/net/minecraft/world/level/BaseSpawner.java
index 28e8403f1f91effd7eb5a50855f823f8adc90b6b..1b9989387d94429538e724329737b304232756e6 100644
--- a/src/main/java/net/minecraft/world/level/BaseSpawner.java
+++ b/src/main/java/net/minecraft/world/level/BaseSpawner.java
@@ -48,6 +48,8 @@ public abstract class BaseSpawner {
     public int requiredPlayerRange = 16;
     public int spawnRange = 4;
     private int tickDelay = 0; // Paper
+    private int blockExistsTick = 0; // Plazma - Add entity spawn deadlock timer
+    private boolean blockLockedByTime = false; // Plazma - Add entity spawn deadlock timer
 
     public BaseSpawner() {}
 
@@ -83,6 +85,17 @@ public abstract class BaseSpawner {
     }
 
     public void serverTick(ServerLevel world, BlockPos pos) {
+        // Plazma start - Add entity spawn deadlock timer
+        if (world.plazmaConfig().entity.spawnDeadlockTimer.enabled) {
+            if (!this.blockLockedByTime) {
+                if (this.blockExistsTick > world.plazmaConfig().entity.spawnDeadlockTimer.timerTimeout)
+                    blockLockedByTime = true;
+                else blockExistsTick++;
+            }
+
+            if (blockLockedByTime && world.getBestNeighborSignal(pos) > 0) return;
+        }
+        // Plazma end - Add entity spawn deadlock timer
         if (spawnCount <= 0 || maxNearbyEntities <= 0) return; // Paper - Ignore impossible spawn tick
         // Paper start - Configurable mob spawner tick rate
         if (spawnDelay > 0 && --tickDelay > 0) return;
@@ -287,6 +300,12 @@ public abstract class BaseSpawner {
         if (nbt.contains("SpawnRange", 99)) {
             this.spawnRange = nbt.getShort("SpawnRange");
         }
+        // Plazma start - Add entity spawn deadlock timer
+        if (nbt.contains("Plazma.SpawnerTicks", 99)) {
+            this.blockExistsTick = nbt.getInt("Plazma.SpawnerTicks");
+            this.blockLockedByTime = nbt.getBoolean("Plazma.SpawnerLocked");
+        }
+        // Plazma end - Add entity spawn deadlock timer
 
         this.displayEntity = null;
     }
@@ -316,6 +335,8 @@ public abstract class BaseSpawner {
             }));
         }
 
+        nbt.putInt("Plazma.SpawnerTicks", this.blockExistsTick); // Plazma - Add entity spawn deadlock timer
+        nbt.putBoolean("Plazma.SpawnerLocked", this.blockLockedByTime); // Plazma - Add entity spawn deadlock timer
         nbt.put("SpawnPotentials", (Tag) SpawnData.LIST_CODEC.encodeStart(NbtOps.INSTANCE, this.spawnPotentials).result().orElseThrow());
         return nbt;
     }
diff --git a/src/main/java/org/plazmamc/plazma/configurations/WorldConfigurations.java b/src/main/java/org/plazmamc/plazma/configurations/WorldConfigurations.java
index b1293935e55fcb1c45224e5bda9be8d1045ff4e8..e5e0b0f0bd3b2249dc1db029682b8957b0addcac 100644
--- a/src/main/java/org/plazmamc/plazma/configurations/WorldConfigurations.java
+++ b/src/main/java/org/plazmamc/plazma/configurations/WorldConfigurations.java
@@ -54,6 +54,14 @@ public class WorldConfigurations extends ConfigurationPart {
 
         }
 
+        public SpawnDeadlockTimer spawnDeadlockTimer;
+        public class SpawnDeadlockTimer extends ConfigurationPart {
+
+            public boolean enabled = OPTIMIZE;
+            public int timerTimeout = 0;
+
+        }
+
     }
 
     public Structure structure;
