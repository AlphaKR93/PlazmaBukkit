From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: AlphaKR93 <dev@alpha93.kr>
Date: Sun, 14 Jan 2024 19:51:19 +0900
Subject: [PATCH] Build system changes


diff --git a/build.gradle.kts b/build.gradle.kts
index 0c92d10f334f82d196e065c0811d0c1f48887377..9118c9ee41eac40662c352ebd71941ddee31d9a0 100644
--- a/build.gradle.kts
+++ b/build.gradle.kts
@@ -19,6 +19,8 @@ dependencies {
         exclude("io.papermc.paper", "paper-api")
     }
     // Purpur end
+    // Plazma start - Use Gradle version catalogs
+    /*
     // Paper start
     implementation("org.jline:jline-terminal-jansi:3.21.0")
     implementation("net.minecrell:terminalconsoleappender:1.3.0")
@@ -32,8 +34,28 @@ dependencies {
      */
     implementation("org.apache.logging.log4j:log4j-core:2.19.0") // Paper - implementation
     log4jPlugins.annotationProcessorConfigurationName("org.apache.logging.log4j:log4j-core:2.19.0") // Paper - Needed to generate meta for our Log4j plugins
+     */
+    log4jPlugins.annotationProcessorConfigurationName(common.log4j.core)
+
+    implementation(common.log4j.core)
+    implementation(common.log4j.iostreams)
+    implementation(common.snakeyaml)
+    implementation(common.bundles.asm)
+    implementation(common.commons.lang2)
+    implementation(common.adventure.serializer.ansi)
+    implementation(server.ansi)
+    implementation(server.bundles.implementation)
+
+    runtimeOnly(common.bundles.maven)
+    runtimeOnly(common.maven.provider)
+    runtimeOnly(server.bundles.runtime)
     runtimeOnly(log4jPlugins.output)
+
     alsoShade(log4jPlugins.output)
+
+    testImplementation(common.bundles.test)
+    testImplementation(server.classgraph)
+    /*
     implementation("io.netty:netty-codec-haproxy:4.1.97.Final") // Paper - Add support for proxy protocol
     // Paper end
     implementation("org.apache.logging.log4j:log4j-iostreams:2.19.0") // Paper - remove exclusion
@@ -44,31 +66,37 @@ dependencies {
     runtimeOnly("org.xerial:sqlite-jdbc:3.42.0.1")
     runtimeOnly("com.mysql:mysql-connector-j:8.2.0")
     runtimeOnly("com.lmax:disruptor:3.4.4") // Paper
+     */
     // Paper start - Use Velocity cipher
-    implementation("com.velocitypowered:velocity-native:3.1.2-SNAPSHOT") {
+    implementation(server.velocity) {
         isTransitive = false
     }
     // Paper end - Use Velocity cipher
 
+    /*
     runtimeOnly("org.apache.maven:maven-resolver-provider:3.9.6")
     runtimeOnly("org.apache.maven.resolver:maven-resolver-connector-basic:1.9.18")
     runtimeOnly("org.apache.maven.resolver:maven-resolver-transport-http:1.9.18")
 
     // Pufferfish start
     implementation("org.yaml:snakeyaml:1.32")
-    implementation ("com.github.carleslc.Simple-YAML:Simple-Yaml:1.8.4") {
+     */
+    implementation(server.simpleyaml) {
         exclude(group="org.yaml", module="snakeyaml")
     }
     // Pufferfish end
 
-    implementation("org.mozilla:rhino-runtime:1.7.14") // Purpur
-    implementation("org.mozilla:rhino-engine:1.7.14") // Purpur
+    // implementation("org.mozilla:rhino-runtime:1.7.14") // Purpur
+    // implementation("org.mozilla:rhino-engine:1.7.14") // Purpur
     implementation("dev.omega24:upnp4j:1.0") // Purpur
 
+    /*
     testImplementation("io.github.classgraph:classgraph:4.8.47") // Paper - mob goal test
     testImplementation("org.junit.jupiter:junit-jupiter:5.10.0")
     testImplementation("org.hamcrest:hamcrest:2.2")
     testImplementation("org.mockito:mockito-core:5.5.0")
+     */
+    // Plazma end - Use Gradle version catalogs
 }
 
 val craftbukkitPackageVersion = "1_20_R3" // Paper
