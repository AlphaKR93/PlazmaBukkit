diff --git a/src/main/java/gg/pufferfish/pufferfish/PufferfishConfig.java b/src/main/java/gg/pufferfish/pufferfish/PufferfishConfig.java
index 8afc58f35deb49084a20b803e91ce4692ce6e4d6..1febd6d0743aadb4002b447c07ec43098ca96c18 100644
--- a/src/main/java/gg/pufferfish/pufferfish/PufferfishConfig.java
+++ b/src/main/java/gg/pufferfish/pufferfish/PufferfishConfig.java
@@ -64,7 +64,7 @@ public class PufferfishConfig {
 		getString("info.version", "1.0");
 		setComment("info",
 				"Pufferfish Configuration",
-				"Check out Pufferfish Host for maximum performance server hosting: https://pufferfish.host",
+				//"Check out Pufferfish Host for maximum performance server hosting: https://pufferfish.host", // Plazma - Sponsorblock
 				"Join our Discord for support: https://discord.gg/reZw4vQV9H",
 				"Download new builds at https://ci.pufferfish.host/job/Pufferfish");
 		
@@ -219,7 +219,7 @@ public class PufferfishConfig {
     public static int maxProjectileLoadsPerTick;
     public static int maxProjectileLoadsPerProjectile;
     private static void projectileLoading() {
-        maxProjectileLoadsPerTick = getInt("projectile.max-loads-per-tick", 10, "Controls how many chunks are allowed", "to be sync loaded by projectiles in a tick.");
+        maxProjectileLoadsPerTick = getInt("projectile.max-loads-per-tick", org.plazmamc.plazma.configurations.PlazmaConfigurations.optimize() ? 8 : 10, "Controls how many chunks are allowed", "to be sync loaded by projectiles in a tick."); // Plazma - Optimize default configurations
         maxProjectileLoadsPerProjectile = getInt("projectile.max-loads-per-projectile", 10, "Controls how many chunks a projectile", "can load in its lifetime before it gets", "automatically removed.");
 
         setComment("projectile", "Optimizes projectile settings");
@@ -233,7 +233,7 @@ public class PufferfishConfig {
     public static int activationDistanceMod;
 
     private static void dynamicActivationOfBrains() throws IOException {
-        dearEnabled = getBoolean("dab.enabled", "activation-range.enabled", false); // Purpur
+        dearEnabled = getBoolean("dab.enabled", "activation-range.enabled", org.plazmamc.plazma.configurations.PlazmaConfigurations.optimize()); // Purpur // Plazma - Optimize default configurations
         startDistance = getInt("dab.start-distance", "activation-range.start-distance", 12,
                 "This value determines how far away an entity has to be",
                 "from the player to start being effected by DEAR.");
@@ -241,7 +241,7 @@ public class PufferfishConfig {
         maximumActivationPrio = getInt("dab.max-tick-freq", "activation-range.max-tick-freq", 20,
                 "This value defines how often in ticks, the furthest entity",
                 "will get their pathfinders and behaviors ticked. 20 = 1s");
-        activationDistanceMod = getInt("dab.activation-dist-mod", "activation-range.activation-dist-mod", 8,
+        activationDistanceMod = getInt("dab.activation-dist-mod", "activation-range.activation-dist-mod", org.plazmamc.plazma.configurations.PlazmaConfigurations.optimize() ? 7 : 8, // Plazma - Optimize default configurations
                 "This value defines how much distance modifies an entity's",
                 "tick frequency. freq = (distanceToPlayer^2) / (2^value)",
                 "If you want further away entities to tick less often, use 7.",
@@ -261,8 +261,18 @@ public class PufferfishConfig {
 	public static Map<String, Integer> projectileTimeouts;
 	private static void projectileTimeouts() {
 		// Set some defaults
+		// Plazma start - Optimize default configurations
+        if (org.plazmamc.plazma.configurations.PlazmaConfigurations.optimize()) {
+            getInt("entity_timeouts.ARROW", 200);
+            getInt("entity_timeouts.EGG", 200);
+            getInt("entity_timeouts.ENDER_PEARL", 200);
+            getInt("entity_timeouts.SNOWBALL", 200);
+            getInt("entity_timeouts.LLAMA_SPIT", 200);
+        } else {
+        // Plazma end - Optimize default configurations
 		getInt("entity_timeouts.SNOWBALL", -1);
 		getInt("entity_timeouts.LLAMA_SPIT", -1);
+		} // Plazma - Optimize default configurations
 		setComment("entity_timeouts",
 				"These values define a entity's maximum lifespan. If an",
 				"entity is in this list and it has survived for longer than",